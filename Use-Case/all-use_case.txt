## NOTE: Change all the Treshold base-on your Environment ##

## Linux SSH Brute-Force Detection ##
index=linux "Failed password"
| rex "Failed password for (invalid user )?(?P<user>\w+) from (?P<src_ip>\d{1,3}(?:\.\d{1,3}){3})"
| bin _time span=5m
| stats count as failed_count by _time, src_ip, user, host
| where failed_count > 5
| rename user as User_Name, _time as Time, host as Host_Name
| convert ctime(Time)
| table Time, User_Name, Host_Name, src_ip, failed_count
| sort failed_count desc

## Threat User-Agent Detection ##
(index=web OR index=nginx) http_method=POST uri_path="/login"
| rex field=_raw "^(?P<src_ip>\d{1,3}(?:\.\d{1,3}){3})"
| rex field=_raw "\"(?P<user_agent>[^\"]+?)\"$"
| eval threat_agent=if(match(lower(user_agent), "curl|sqlmap|python-requests|nmap|wget|nikto|masscan|libwww-perl"), "Yes", "No")
| bin _time span=1d
| stats count as failed_count by _time, src_ip, host, dest_owner, uri_path, http_referrer, user_agent, threat_agent
| where failed_count > 20
| rename _time as Time
| convert ctime(Time)
| sort failed_count desc
| table Time, src_ip, host, dest_owner, uri_path, http_referrer, user_agent, threat_agent, failed_count

## Web Login Brute-Force Detection ##
(index=web OR index=nginx) http_method=POST uri_path="/login"
| rex field=_raw "^(?P<src_ip>\d{1,3}(?:\.\d{1,3}){3})"
| rex field=_raw "\"(?P<user_agent>[^\"]+?)\"$"
| bin _time span=1d
| stats count as failed_count by _time, src_ip, host, dest_owner, uri_path, http_referrer, user_agent
| where failed_count > 20
| rename _time as Time
| convert ctime(Time)
| sort failed_count desc
| table Time, src_ip, host, dest_owner, uri_path, http_referrer, user_agent, failed_count
